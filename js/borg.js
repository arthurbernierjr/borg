// Generated by CoffeeScript 1.4.0
var child, host, match, nil, node, pass, pkg, spawn, ssh, stdin, user, _i, _len, _ref;

ssh = require('./ssh');

pkg = require('../package.json');

spawn = require('child_process').spawn;

switch (process.argv[2]) {
  case '-V':
  case '--version':
  case 'version':
    console.log("borg v" + pkg.version + " - by Mike Smullin <mike@smullindesign.com>\n");
    break;
  case '-h':
  case '--help':
  case 'help':
    switch (process.argv[3]) {
      case 'rekey':
        console.log("Usage: borg rekey [options] <user:password@host ...>\n\nOptions:\n\n  -i  identity file path\n");
        break;
      case 'ssh':
        console.log('');
        break;
      case 'deploy':
        console.log('');
        break;
      default:
        console.log("Usage: borg <command> [options] <host ...>\n\nCommands:\n\n  rekey   copy ssh public key to authorized_hosts on remote host(s)\n  ssh     bulk execute command on remote host(s)\n  deploy  execute cookbook on remote host(s)\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output version number\n");
    }
    break;
  case 'rekey':
    console.log(process.argv.slice(3));
    _ref = process.argv.slice(3);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      node = _ref[_i];
      if (!(match = node.match(/^(.+?)(:(.+))?@(.+)$/))) {
        continue;
      }
      nil = match[0], user = match[1], nil = match[2], pass = match[3], host = match[4];
      child = spawn("ssh", ["-tt", "" + user + "@" + host]);
      stdin = child.stdin;
      child.stdout.on('data', function(data) {
        console.log('stdout: ' + data.toString());
        return console.log('hey something wrote out');
      });
      child.stderr.on('data', function(data) {
        return console.log('stderr: ' + data.toString());
      });
      child.on('close', function(code, signal) {
        console.log({
          event: 'exit',
          code: code,
          signal: signal
        });
        if (code === 0) {

        } else {

        }
      });
    }
    break;
  case 'ssh':
    console.log(process.argv.slice(3));
    break;
  case 'deploy':
    console.log(process.argv.slice(3));
}
